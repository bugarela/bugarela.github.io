:PROPERTIES:
:ID:       825c34ed-bbc5-4dee-ab8c-f436b239ed77
:END:
#+title:     Efetivação em Duas Fases
#+EMAIL:     gabrielamoreira05@gmail.com
#+DATE:      21 de maio de 2025
#+LANGUAGE:  en
#+OPTIONS:   H:2 num:t toc:nil \n:t @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:nil pri:nil tags:not-in-toc
#+BEAMER_FRAME_LEVEL: 2
#+startup: beamer
#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [smaller]
#+BEAMER_THEME: udesc
#+BEAMER_HEADER: \input{header.tex} \subtitle{Aula para disciplina de Métodos Formais} \institute{Departamento de Ciência da Computação - DCC\\Universidade do Estado de Santa Catarina - UDESC}
#+LATEX_COMPILER: pdflatex
#+bibliography: references.bib
#+cite_export: csl ~/MEGA/csl/associacao-brasileira-de-normas-tecnicas.csl
#+PROPERTY: header-args :tangle tictactoe.tla
#+HTML: <a href="https://bugarela.com/mfo/slides/20240507182006-mfo_efetivacao_em_duas_fases.pdf">Slides</a><br />
#+beamer: \begin{frame}{Conteúdo}
#+TOC: headlines 3
#+beamer: \end{frame}

* Preparando uma viagem
** Preparando uma viagem
Tomas está planejando uma viagem e precisa de hospedagem e passagens aéreas.
#+ATTR_LATEX: :width 150
[[./figures/two-phase-commit/thinking-about-trip.png]]

Entretando, Tomas está com medo de reservar o hotel e acabar não conseguindo passagem. Ou pior, comprar as passagens e acabar não conseguindo um hotel pra ficar.

** Iniciando reserva do hotel
Tomas tem um plano! Primeiro, ele abre o site do hotel e inicia uma reserva. Esses sites normalmente seguram as reservas iniciadas por alguns minutos para você preencher seus dados de pagamento, então existe uma certa garantia de que a hospedagem será do Tomas se ele confirmar a tempo.
#+ATTR_LATEX: :width 190
[[./figures/two-phase-commit/hotel-reservation.png]]

** Iniciando reserva das passagens aéreas
Depois, ele muda de aba para o site da companhia aérea e inicia a reserva do voo.
#+ATTR_LATEX: :width 190
[[./figures/two-phase-commit/flight-reservation.png]]

#+BEAMER: \pause
PS: Para efeitos desse exemplo, vamos considerar que os sites de companhia aérea funcionam decentemente.

** Confirmando a reserva do hotel
Agora que o Tomas sabe que tem as passagens e hospedagem que precisa, ele inicia as confirmações.
#+ATTR_LATEX: :width 190
[[./figures/two-phase-commit/hotel-confirmation.png]]

** Confirmando a reserva das passagens aéreas
Em seguida, ele confirma as passagens aéreas.
#+ATTR_LATEX: :width 190
[[./figures/two-phase-commit/flight-confirmation.png]]

** Protocolo de preparação de viagem do Tomas
Assumindo que:
- Os sites de hotel e passagens aéreas vão manter disponíveis os itens selecionados enquanto a reserva não expirar
  #+BEAMER: \pause
  - Por exemplo, se o Tomas iniciou uma reserva do último quarto de hotel, aquele hotel vai aparecer indisponível se outra pessoa procurar enquanto o Tomas não finaliza sua compra, ou seu tempo expira.
#+BEAMER: \pause
- Os sites não vão ficar indisponíveis durante o processo
#+BEAMER: \pause
- O Tomas tem tempo suficiente para confirmar as duas reservas antes de alguma delas expirarem
  #+BEAMER: \pause
  - Por exemplo, o Tomas não vai ficar sem internet no meio do processo.

#+BEAMER: \medskip\pause
Podemos garantir que:
- Se o Tomas reservar a passagem aérea, ele conseguirá hospedagem.
- Se o Tomas reservar hospedagem, ele conseguirá passagem aérea.

* Efetivação em duas fases
** Efetivação em duas fases (/Two-Phase Commit/)
Podemos dizer que o protocolo do Tomas é uma efetivação em duas fases.
- Na primeira fase, ele prepara as reservas em ambos os sites, e aguarda confirmação
- Na segunda fase, ele efetiva as reservas preparadas na primeira fase

** Primeira fase: preparar hotel
Primeiro, o Tomas requisita uma preparação do site do hotel. Preparar aqui significa:
- "Oi, se tiver um quarto de hotel disponível pro dia tal, me avisa e guarda ele pra mim. Te confirmo e dou meus dados de pagamento daqui a pouco."

#+BEAMER: \medskip
As partes importantes são:
- Me avisa se tem hotel disponível
- Deixa ele guardado pra mim

#+ATTR_LATEX: :width 180
[[./figures/two-phase-commit/prepare-hotel.png]]

** Primeira fase: preparar passagens aéreas
Novamente, as partes importantes são:
- Me avisa se tem passagem aérea disponível
- Deixa guardado pra mim

#+ATTR_LATEX: :width 180
[[./figures/two-phase-commit/prepare-flight.png]]

** Primeira fase: aguardar confirmações
Para finalizar a primeira fase, o Tomas deve receber a confirmação de que as preparações foram positivas.
- Se alguma das reservas não funcionar, ele aborta a operação, cancelando ou fechando a aba do outro site.

#+ATTR_LATEX: :width 180
[[./figures/two-phase-commit/all-prepared.png]]

** Segunda fase: confirmar todas as reservas
Na segunda fase, considerando que as preparações foram positivas, basta que o Tomas confirme todas as reservas.
- Isso é a efetivação da operação (/commit/).
- /Commit/ pode também ser traduzido como comprometer-se. É quando o Tomas dá os dados de cartão de crédito dele e se compromete com a compra.

#+ATTR_LATEX: :width 180
[[./figures/two-phase-commit/commit.png]]


** Termos do protocolo /Two-Phase Commit/
#+ATTR_LATEX: :width 190
[[./figures/two-phase-commit/translation.png]]

** Propriedade
Queremos garantir que:
- Se o Tomas reservar a passagem aérea, ele conseguirá hospedagem.
- Se o Tomas reservar hospedagem, ele conseguirá passagem aérea.

#+BEAMER: \medskip\pause
Pensando que podemos ter vários outros /resource managers/, podemos generalizar isso como:
- Se um /resource manager/ for efetivado, então todos os outros devem ser também

** Especificações
- Vamos ver as especificações em Quint e TLA+
  - Quint: [[https://github.com/informalsystems/quint/blob/main/examples/classic/distributed/TwoPhaseCommit/two_phase_commit.qnt]]
  - TLA+: [[https://github.com/tlaplus/Examples/blob/master/specifications/transaction_commit/TwoPhase.tla]]

** Separação de memória
- Nas especificações, o que cada componente do sistema conhece fica sempre to estado da nossa máquina de estados.
#+BEAMER: \pause
- Na realidade de sistemas distribuídos, é importante considerar que esse conhecimento está separado
  #+BEAMER: \pause
  - Só o site do hotel sabe da disponibilidade de quartos e pode fazer reservas
  #+BEAMER: \pause
  - Só o site da companhia aérea sabe da disponibilidade de voos e pode fazer reservas
#+BEAMER: \pause
- Se a memória fosse uma só, seria muito mais simples

** Atomicidade
 Operações atômicas são aquelas que podem executar sem "interrupção" de outro processo.
 #+BEAMER: \pause
 - São aquelas que conseguimos executar de certeza, não importa o que aconteça com os outros fatores.
  #+BEAMER: \pause
   - "Outros fatores" depende do nosso nível de abstração e suposições

#+BEAMER: \medskip\pause
Exemplo de operações atômicas:
- Iniciar uma reserva
- Confirmar uma reserva
- Cancelar uma reserva

#+BEAMER: \medskip\pause
Exemplo de operação não atômica:
- Comprar uma passagem aérea
  #+BEAMER: \pause
  - Considerando o nível de abstração do exemplo do Tomas, é possível dar início e até finalizar a compra de hospedagem *enquanto* ele compra passagens aéreas.
  #+BEAMER: \pause
  - Se algo pode acontecer *enquanto* a operação acontece, a operação não é atômica.

** Atomicidade em modelos
Uma ação vai sempre representar uma operação atômica
  #+BEAMER: \pause
  - Nada pode acontecer *enquanto* uma transição do sistema acontece
  #+BEAMER: \pause
  - Depende completamente do nível de abstração que escolhemos
    - Podemos entrar em mais detalhe e considerar cada clique que o Tomas dá nos sites.

#+BEAMER: \medskip\pause
PS: No trabalho 1, o nível de abstração mais apropriado é uma transição por turno.

** Aplicação prática de /Two-Phase Commit/
Um exemplo de aplicação é para escrever dados em múltiplos bancos de dados diferentes, a fim de manter consistência de dados entre eles.
  #+BEAMER: \pause
- Semelhante ao exemplo em [cite:@consensus-heidi-howard]
  #+BEAMER: \pause
- Já usei em uma migração de bancos de dados

** Referências
#+print_bibliography:

#+beamer: \end{frame} \maketitle
